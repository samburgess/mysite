{"version":3,"sources":["7Tn.gif","clipboard.jpg","About.js","Nav.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","console","log","className","Nav","to","target","href","projects","generated","Project","props","this","title","source_link","pages_link","technologies","description","React","Component","Projects","push","projectList","map","p","key","Home","src","gif","alt","App","basename","process","exact","path","component","window","location","text","onCopy","clipboard","height","width","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f65976df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/7Tn.512d74bd.gif\";","module.exports = __webpack_public_path__ + \"static/media/clipboard.3fc4d835.jpg\";","import React from 'react';\nimport './App.css';\n\nfunction About(){\n    console.log(\"render about\")\n    return(\n        <div className=\"About\">\n            <h1>About Me</h1>\n            <div>\n            I am a soon-to-graduate Computer Science student at Western Washington University in Bellingham, WA.\n            \n\n            </div>\n        </div>\n\n)}\n\nexport default About;","\nimport React from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom';\n\nfunction Nav(){\n\n    return(\n        <nav>\n            <ul className=\"Links\">\n                <Link to={`/about`} className=\"dothing\">\n                    <h2>About Me</h2>\n                    </Link>\n                {/* <Link to={'/github'} className=\"dothing\">\n                    <h2>Github</h2>\n                </Link> */}\n                <a target=\"_blank\" href=\"https://github.com/samburgess/\" className=\"GhLink\">\n                    Github\n                </a>\n                <Link to={'/projects'} className=\"dothing\">\n                    <h2>Projects</h2>\n                </Link>\n            </ul>    \n        </nav>\n\n)}\n\nexport default Nav;\n","import React from 'react';\nimport './App.css';\nimport {Link, BrowserRouter as Router} from 'react-router-dom';\n\n\n//list of projectData\nvar projects = [];\nvar generated = false;\n\nfunction genProjects(){\n\n    console.log(\"gen projects\")\n\n    var covidmap = {\n        title:'Covid 19 Visualisation',\n        description: \"React app implementing Google's heatmap API. Powered by a Node.js server, using data from the New York Times (github.com/ny-times/Covid-19-data)\",\n        technologies: 'JavaScript, React.js, Node.js, Google Cloud Engine',\n        pages_link: 'https://samburgess.github.io/covidmap_client',\n        source_link: 'https://github.com/samburgess/covidmap_client/'\n    }\n\n    projects.push(covidmap)\n\n    //dirtbag\n    var dirtbag = {\n        title:'Dirtbag',\n        description:\"React app utilizing REI's Mountain Project API to find climbing routes near the user`s geolocation.\",\n        technologies:'JavaScript, React.js',\n        pages_link: '',\n        source_link: 'https://github.com/samburgess/dirtbag'\n    }\n\n    projects.push(dirtbag)\n\n    var webtech = {\n        title:'WWU Content Aggregation System',\n        description:'A system that pulls content (articles etc.) from various University publications into a central database. The database is accompanied by a web portal that allows whitelisted users to search our database and create collections of content piece for projects. ',\n        technologies:'JavaScript, Node.js, React.js, Next.js, MySQL, PHP ',\n        pages_link:null,\n        source_link:null\n    }\n\n    projects.push(webtech)\n\n    generated = true;\n\n\n}\n\nclass Project extends React.Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <div className=\"Project\">\n                <h1>{this.props.title}</h1>\n                <a target=\"_blank\" href={this.props.source_link} className=\"Project-link\">\n                    View Source on Github >\n                </a>\n                <a target=\"_blank\" href={this.props.pages_link} className=\"Project-link\">\n                    View on Github Pages >\n                </a>\n                <h2>{this.props.technologies}</h2>\n                <div>{this.props.description}</div>\n            </div>\n    )}\n\n}\n\nexport default function Projects(){\n\n    console.log(\"projects\")\n\n    if(!generated){\n        genProjects()\n    }\n\n    let projectList = projects.map((p) => \n    \n        <Project \n            key={p.title}\n            title={p.title}\n            description={p.description}\n            technologies={p.technologies}\n            source_link={p.source_link}\n            pages_link={p.pages_link}\n        />\n    )\n\n    return(\n        <ul className=\"Project-list\">\n            {projectList}\n        </ul>\n    )\n}","import React from 'react';\nimport gif from './7Tn.gif';\nimport clipboard from './clipboard.jpg';\nimport './App.css';\nimport About from './About.js';\nimport Nav from './Nav.js';\nimport Projects from './Projects.js';\n\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*ensure correct routing under deployment*/}\n      <Router basename={`${process.env.PUBLIC_URL}/`}>\n          <Link to='/' className=\"dothing\">\n            <h1 className=\"Header\">Samuel C. Burgess</h1>\n          </Link>\n          <Nav />\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route exact path={`/about`} component={About}/>\n            <Route path='/github' component={() => { \n                window.location.href = 'https://github.com/samburgess'; \n                return null;\n            }}/>\n            <Route path='/covidmap_client' component={() => { \n                window.location.href = 'https://samburgess.github.io/covidmap_client/'; \n                return null;\n            }}/>\n            <Route exact path={`/projects`} component={Projects}/>\n          </Switch>\n\n          <div className=\"App-contacts\">\n            <div>\n            saburgess239@gmail.com\n            <CopyToClipboard className=\"App-clear\" text=\"saburgess239@gmail.com\" onCopy={()=>console.log(\"copied email\\n\")}>\n              <button ><img src={clipboard} height=\"30px\" width=\"25px\"/></button>\n            </CopyToClipboard>\n            </div>\n            +1 (425) 829-5203\n          </div>\n\n      </Router>\n    </div>\n  );\n}\n\nconst Home = () => (\n  <div>\n    <img src={gif} className=\"App-logo\" alt=\"logo\" />\n  </div>\n\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}